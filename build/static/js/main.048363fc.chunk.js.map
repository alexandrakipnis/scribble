{"version":3,"sources":["Form.js","Note.js","List.js","Sidebar.js","base.js","Main.js","SignIn.js","App.js","serviceWorker.js","index.js","quill.svg","new.png","new-hover.png","google.svg"],"names":["Form","_ref","currentNote","saveNote","removeCurrentNote","handleChanges","ev","note","Object","objectSpread","target","name","value","react_default","a","createElement","className","type","onClick","placeholder","title","onChange","body","Note","setCurrentNote","class","List","notes","id","map","src_Note","key","styles","StyleSheet","create","sidebar","width","backgroundColor","padding","display","flexDirection","alignItems","logo","fontFamily","color","fontSize","logoImg","paddingLeft","newNote","marginTop","position","newNoteImg","left","transition","newNoteImgHover",":hover","opacity","signOut","bottom","button","border","cursor","outline","buttonIcon","Sidebar","resetCurrentNote","css","src","quill","alt","href","preventDefault","plusHover","plusIcon","concat","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","githubProvider","auth","GithubAuthProvider","googleProvider","GoogleAuthProvider","Rebase","createClass","Main","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","blankNote","setState","toConsumableArray","state","i","findIndex","Date","now","push","splice","base","syncState","props","uid","context","asArray","classname","style","src_Sidebar","src_List","src_Form","React","Component","height","Signin","authenticate","provider","signInWithPopup","googleLogo","App","handleAuth","user","localStorage","setItem","signedIn","removeItem","_this2","getItem","onAuthStateChanged","src_Main","src_SignIn","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.048363fc.chunk.js","sourcesContent":["import React from 'react'\nimport \"./NoteForm.css\"\n\nconst Form = ({currentNote, saveNote, removeCurrentNote}) => {\n  const handleChanges = (ev) => {\n    const note = {...currentNote}\n    note[ev.target.name] = ev.target.value\n    saveNote(note)\n  }\n\n    return(\n        <div className=\"NoteForm\">\n          <div className=\"form-actions\">\n            <button \n            type=\"button\"\n            onClick={removeCurrentNote}\n            >\n              <i className=\"far fa-trash-alt\"></i>\n            </button>\n          </div>\n          <form>\n            <p>\n              <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title your note\"\n                value={currentNote.title}\n                onChange={handleChanges}\n              />\n            </p>\n            \n            <textarea \n              name=\"body\"\n              value={currentNote.body}\n              onChange={handleChanges}\n            >\n            </textarea>\n          </form>\n        </div>\n    )\n}\n\nexport default Form","import React from 'react'\n\nconst Note = ({note, setCurrentNote}) => {\n    return (\n        <li \n            className=\"Note\"\n            onClick={() => setCurrentNote(note)}\n        >\n            <div className=\"note\">\n                <div className=\"note-title\">\n                    { note.title }\n                </div>\n                <div class=\"note-body\">\n                    <p>\n                        { note.body }\n                    </p>\n                </div>\n            </div>\n        </li>\n    )\n\n}\n\nexport default Note","import React from 'react'\nimport \"./NoteList.css\"\nimport Note from './Note'\n\nconst List = ({notes, setCurrentNote}) => {\n    \n    return(\n        <div className=\"NoteList\">\n          <h3>Notes</h3>\n          <ul id=\"notes\">\n            <a className=\"active\">\n                { notes.map(note => \n                    <Note \n                        key={note.id} \n                        note={note} \n                        setCurrentNote={setCurrentNote}\n                    />\n                )}\n            </a>\n            </ul>\n        </div>\n    )\n}\n\nexport default List","import React from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport quill from './quill.svg'\nimport plusIcon from './new.png'\nimport plusHover from './new-hover.png'\n\nconst Sidebar = ({resetCurrentNote, signOut}) => {\n  \n      return (\n          <div className={css(styles.sidebar)} >\n              <div className={css(styles.logo)} >\n                  <img \n                    src={quill} \n                    alt='Scribble' \n                    className={css(styles.logoImg)}\n                  />\n              </div>\n              <a \n                href='/notes' \n                className={css(styles.newNote)}\n                onClick={(ev) => {\n                  ev.preventDefault()\n                  resetCurrentNote()\n                }} \n              >\n                  <img \n                    src={plusHover} \n                    alt='New Note' \n                    className={css(styles.newNoteImg)}\n                  /> \n                  <img \n                    src={plusIcon} \n                    alt='New Note' \n                    className={css(styles.newNoteImg, styles.newNoteImgHover)}\n                  /> \n              </a>\n\n              <div className={css(styles.signOut)} >\n                  <button \n                    className={css(styles.button)}\n                    onClick={signOut}\n                  >\n                      <i \n                        className={`fas fa-sign-out-alt ${css(styles.buttonIcon)}`}\n                        title=\"sign out\"\n                      > </i> \n                  </button>\n              </div>\n\n          </div>\n\n\n      )\n}\n\nconst styles =  StyleSheet.create({\n    sidebar: {\n      width: '6rem',\n      backgroundColor: '#f3f3f3',\n      padding: '0.5rem 0',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    logo: {\n      fontFamily: '\"Fauna One\"',\n      color: '#666',\n      fontSize: '3rem',\n    },\n    logoImg: {\n      width: '3rem',\n      paddingLeft: '0.4rem',\n    },\n    newNote: {\n      marginTop: '2rem',\n      position: 'relative',\n      width: '4rem',\n    },\n    newNoteImg: {\n      position: 'absolute',\n      left: '0',\n      width: '100%',\n      transition: 'opacity 0.25s ease-in-out',\n    },\n    newNoteImgHover: {\n      ':hover': {\n       opacity: 0,\n      },\n    },\n    signOut: {\n      position: 'absolute',\n      bottom: '1rem',\n    },\n    button: {\n      backgroundColor: 'transparent',\n      border: '0',\n      color: '#008bf8',\n      cursor: 'pointer',\n      outline: 'none',\n    },\n    buttonIcon: {\n      fontSize: '2rem',\n    },\n  })\nexport default Sidebar","import firebase from 'firebase/app'\nimport 'firebase/database'\nimport Rebase from 're-base'\nimport 'firebase/auth'\n//Initialize Firebase\nconst config = {\n    apiKey: \"AIzaSyAxzFARpr5XpEuc1BeqiPeCcrxwZ10TyLE\",\n    authDomain: \"scribble-cs252.firebaseapp.com\",\n    databaseURL: \"https://scribble-cs252.firebaseio.com\",\n    projectId: \"scribble-cs252\",\n    storageBucket: \"scribble-cs252.appspot.com\",\n    messagingSenderId: \"1072152629926\"\n  };\n  const app = firebase.initializeApp(config)\n  const db = firebase.database(app)\n\n  export const githubProvider = new firebase.auth.GithubAuthProvider()\n  export const googleProvider = new firebase.auth.GoogleAuthProvider()\n  \n  export const auth = app.auth()\n\n  export default Rebase.createClass(db)\n\n","import React from 'react'\n\nimport Form from './Form'\nimport List from './List'\nimport Sidebar from './Sidebar'\nimport base from './base'\n\nclass Main extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            currentNote: this.blankNote(),\n            notes: []\n        }\n    }\n\n    componentWillMount() {\n        base.syncState(`notes/${this.props.uid}`, {\n            context: this,\n            state: 'notes',\n            asArray: true,\n        })\n    }\n\n    blankNote = () => {\n        return { \n            id: null,\n            title: '',\n            body: '',\n        }\n    }\n\n    setCurrentNote = (note) => {\n        this.setState({ currentNote: note })\n    }\n\n    resetCurrentNote = () => {\n        this.setCurrentNote(this.blankNote())\n    }\n\n    saveNote = (note) => {\n        const notes = [...this.state.notes]\n\n        if(!note.id){\n            //new note\n            note.id = Date.now()\n            notes.push(note)\n        }else{\n            //existing notes\n            const i = notes.findIndex(currentNote => currentNote.id === note.id)\n            notes[i] = note\n        }\n        this.setState({notes})\n        this.setCurrentNote(note)\n\n        \n    }\n\n    removeCurrentNote = () => {\n        const notes = [...this.state.notes]\n        const i = notes.findIndex(note => note.id === this.state.currentNote.id)\n        if(i > -1){\n            notes.splice(i, 1)\n            this.setState({notes})\n            \n        }\n\n        this.resetCurrentNote()\n    }\n\n    render() {\n        return (\n            <div classname =\"Main\" style={style}>\n                <Sidebar \n                    resetCurrentNote={this.resetCurrentNote}\n                    signOut={this.props.signOut}\n                />\n                <List \n                    notes={this.state.notes} \n                    setCurrentNote={this.setCurrentNote}\n                />\n                <Form \n                    currentNote={this.state.currentNote}\n                    saveNote={this.saveNote}\n                    removeCurrentNote={this.removeCurrentNote}\n                />\n            </div>\n        )\n    }\n}\n\nconst style = {\n    display: 'flex',\n    height: '100vh',\n    alignItems: 'stretch',   \n}\n\nexport default Main\n","import React from 'react'\nimport './SignIn.css'\nimport googleLogo from './google.svg'\nimport {auth, githubProvider, googleProvider} from './base'\n\nconst Signin = () => {\n    const authenticate = (provider) => {\n        auth.signInWithPopup(provider)\n    }\n\n    return(\n        <div className=\"SignIn\">\n            <header className=\"Header\">\n                <img src=\"media/quill.svg\" alt=\"\"/>\n                <span className=\"title\"></span>\n            </header>\n            <main>\n            <h3>Welcome to Scribble!</h3>\n            <p>The best place to keep track of what you need to get done and scribble down your notes</p>\n            <button \n                className=\"github\"\n                onClick={() => authenticate(githubProvider)}\n            >\n                <i className=\"fab fa-github\"></i>\n                Sign in with GitHub\n            </button>\n            <button \n                className=\"google\"\n                onClick={() => authenticate(googleProvider)}\n            >\n                <img src={googleLogo} alt=\"\"/>\n                Sign in with Google\n            </button>\n         </main>\n        </div> \n    )\n}\n\nexport default Signin","import React, { Component } from 'react'\n\nimport './App.css'\nimport Main from './Main'\nimport {auth} from './base'\nimport SignIn from './SignIn'\n\nclass App extends Component {\n  state = {\n    uid: null,\n  }\n\n  componentDidMount() {\n    const uid = localStorage.getItem('uid')\n    if(uid){\n      this.setState({uid})\n    }\n    auth.onAuthStateChanged((user) => {\n      if(user){\n        this.handleAuth(user)\n      }else{\n        this.signOut()\n      }\n    })\n  }\n\n  handleAuth = (user) => {\n    this.setState({uid: user.uid})\n    localStorage.setItem('uid', user.uid)\n  }\n\n  signedIn = () => {\n    return this.state.uid\n  }\n\n  signOut = () => {\n    this.setState({uid: null})\n    auth.signOut()\n    localStorage.removeItem('uid')\n  }\n\n  render() {\n    return (\n      <div classname=\"App\">\n      {\n        this.signedIn() \n          ? <Main signOut={this.signOut} uid={this.state.uid}/> \n          : <SignIn handleAuth={this.handleAuth}/>\n      }\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/quill.d2ea47fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/new.2718a414.png\";","module.exports = __webpack_public_path__ + \"static/media/new-hover.751b2c31.png\";","module.exports = __webpack_public_path__ + \"static/media/google.ffe5e6be.svg\";"],"sourceRoot":""}