{"version":3,"sources":["quill.svg","new.png","new-hover.png","Form.js","Note.js","List.js","Sidebar.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","_ref","currentNote","saveNote","removeCurrentNote","handleChanges","ev","note","Object","objectSpread","target","name","value","react_default","a","createElement","className","type","onClick","placeholder","title","onChange","body","Note","props","setCurrentNote","class","List","notes","id","map","src_Note","key","styles","StyleSheet","create","sidebar","width","backgroundColor","padding","display","flexDirection","alignItems","logo","fontFamily","color","fontSize","logoImg","paddingLeft","newNote","marginTop","position","newNoteImg","left","transition","newNoteImgHover",":hover","opacity","signOut","bottom","button","border","cursor","outline","buttonIcon","Sidebar","resetCurrentNote","css","src","quill","alt","href","preventDefault","plusHover","plusIcon","concat","Main","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","blankNote","setState","toConsumableArray","state","i","findIndex","Date","now","push","splice","classname","style","src_Sidebar","src_List","src_Form","React","Component","height","App","src_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f1322e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quill.d2ea47fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/new.2718a414.png\";","module.exports = __webpack_public_path__ + \"static/media/new-hover.751b2c31.png\";","import React from 'react'\nimport \"./NoteForm.css\"\n\nconst Form = ({currentNote, saveNote, removeCurrentNote}) => {\n  const handleChanges = (ev) => {\n    const note = {...currentNote}\n    note[ev.target.name] = ev.target.value\n    saveNote(note)\n  }\n\n    return(\n        <div className=\"NoteForm\">\n          <div className=\"form-actions\">\n            <button \n            type=\"button\"\n            onClick={removeCurrentNote}\n            >\n              <i className=\"far fa-trash-alt\"></i>\n            </button>\n          </div>\n          <form>\n            <p>\n              <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title your note\"\n                value={currentNote.title}\n                onChange={handleChanges}\n              />\n            </p>\n            \n            <textarea \n              name=\"body\"\n              value={currentNote.body}\n              onChange={handleChanges}\n            >\n            </textarea>\n          </form>\n        </div>\n    )\n}\n\nexport default Form","import React from 'react'\n\nconst Note = (props) => {\n    return (\n        <li \n            className=\"Note\"\n            onClick={() => props.setCurrentNote(props.note)}\n        >\n            <div className=\"note\">\n                <div className=\"note-title\">\n                    { props.note.title }\n                </div>\n                <div class=\"note-body\">\n                    <p>\n                        { props.note.body }\n                    </p>\n                </div>\n            </div>\n        </li>\n    )\n\n}\n\nexport default Note","import React from 'react'\nimport \"./NoteList.css\"\nimport Note from './Note'\n\nconst List = ({notes, setCurrentNote}) => {\n    \n    return(\n        <div className=\"NoteList\">\n          <h3>Notes</h3>\n          <ul id=\"notes\">\n            <a className=\"active\">\n                { notes.map(note => \n                    <Note \n                        key={note.id} \n                        note={note} \n                        setCurrentNote={setCurrentNote}\n                    />\n                )}\n            </a>\n            </ul>\n        </div>\n    )\n}\n\nexport default List","import React from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport quill from './quill.svg'\nimport plusIcon from './new.png'\nimport plusHover from './new-hover.png'\n\nconst Sidebar = ({resetCurrentNote}) => {\n  \n      return (\n          <div className={css(styles.sidebar)} >\n              <div className={css(styles.logo)} >\n                  <img \n                    src={quill} \n                    alt='Scribble' \n                    className={css(styles.logoImg)}\n                  />\n              </div>\n              <a \n                href='/notes' \n                className={css(styles.newNote)}\n                onClick={(ev) => {\n                  ev.preventDefault()\n                  resetCurrentNote()\n                }} \n              >\n                  <img \n                    src={plusHover} \n                    alt='New Note' \n                    className={css(styles.newNoteImg)}\n                  /> \n                  <img \n                    src={plusIcon} \n                    alt='New Note' \n                    className={css(styles.newNoteImg, styles.newNoteImgHover)}\n                  /> \n              </a>\n\n              <div className={css(styles.signOut)} >\n                  <button className={css(styles.button)}>\n                      <i \n                        className={`fas fa-sign-out-alt ${css(styles.buttonIcon)}`}\n                        title=\"sign out\"\n                      > </i> \n                  </button>\n              </div>\n\n          </div>\n\n\n      )\n}\n\nconst styles =  StyleSheet.create({\n    sidebar: {\n      width: '6rem',\n      backgroundColor: '#f3f3f3',\n      padding: '0.5rem 0',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    logo: {\n      fontFamily: '\"Fauna One\"',\n      color: '#666',\n      fontSize: '3rem',\n    },\n    logoImg: {\n      width: '3rem',\n      paddingLeft: '0.4rem',\n    },\n    newNote: {\n      marginTop: '2rem',\n      position: 'relative',\n      width: '4rem',\n    },\n    newNoteImg: {\n      position: 'absolute',\n      left: '0',\n      width: '100%',\n      transition: 'opacity 0.25s ease-in-out',\n    },\n    newNoteImgHover: {\n      ':hover': {\n       opacity: 0,\n      },\n    },\n    signOut: {\n      position: 'absolute',\n      bottom: '1rem',\n    },\n    button: {\n      backgroundColor: 'transparent',\n      border: '0',\n      color: '#008bf8',\n      cursor: 'pointer',\n      outline: 'none',\n    },\n    buttonIcon: {\n      fontSize: '2rem',\n    },\n  })\nexport default Sidebar","import React from 'react'\n\nimport Form from './Form'\nimport List from './List'\nimport Sidebar from './Sidebar'\n\nclass Main extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            currentNote: this.blankNote(),\n            notes: []\n        }\n    }\n\n    blankNote = () => {\n        return {\n            id: null,\n            title: '',\n            body: '',\n        }\n    }\n\n    setCurrentNote = (note) => {\n        this.setState({ currentNote: note })\n    }\n\n    resetCurrentNote = () => {\n        this.setCurrentNote(this.blankNote())\n    }\n\n    saveNote = (note) => {\n        const notes = [...this.state.notes]\n\n        if(!note.id){\n            //new note\n            note.id = Date.now()\n            notes.push(note)\n        }else{\n            //existing notes\n            const i = notes.findIndex(currentNote => currentNote.id === note.id)\n            notes[i] = note\n        }\n        this.setState({notes})\n        this.setCurrentNote(note)\n    }\n\n    removeCurrentNote = () => {\n        const notes = [...this.state.notes]\n        const i = notes.findIndex(note => note.id === this.state.currentNote.id)\n        if(i > -1){\n            notes.splice(i, 1)\n            this.setState({notes})\n        }\n\n        this.resetCurrentNote()\n    }\n\n    render() {\n        return (\n            <div classname =\"Main\" style={style}>\n                <Sidebar \n                    resetCurrentNote={this.resetCurrentNote}\n                />\n                <List \n                    notes={this.state.notes} \n                    setCurrentNote={this.setCurrentNote}\n                />\n                <Form \n                    currentNote={this.state.currentNote}\n                    saveNote={this.saveNote}\n                    removeCurrentNote={this.removeCurrentNote}\n                />\n            </div>\n        )\n    }\n}\n\nconst style = {\n    display: 'flex',\n    height: '100vh',\n    alignItems: 'stretch',   \n}\n\nexport default Main\n","import React, { Component } from 'react'\n\nimport './App.css'\nimport Main from './Main'\n\nclass App extends Component {\n  render() {\n    return (\n      <div classname=\"App\">\n        <Main />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}